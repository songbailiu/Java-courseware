二进制  0,1      00001000
八进制  0开头每一位取值0-7   16  020
十六进制  0x或者0X开头  0-9 a-f或者A-F  10a,11b,12c,13d,14e,15f  31 0x1f
byte 8bit 1字节  00001000  -->十进制 0*2~0+ 0*2~1+0*2~2+1*2~3
 2 17   1     00010001   1*2~0+1*2~4  
 2 8    0
 2 4    0
2  2    0
2  1    1
   0

八进制<-->十进制
31         八进制   037      7*8~0+3*8~1     
 8  31  7
 8   3   3
    0
十六进制--十进制
31    十六进制   0x1f     15*16~0+1*16~1
16  31    15
16   1     1
     0


正数的原码与补码相同  
8   00001000 --- 00001000
负数的补码是正数的补码按位取反加1
-8   
00001000
11110111
00000001
11111000 
已知负数的补码如何计算它的十进制值
 1.求出对应正数的补码  换算正数的十进制
11111000
00000111
00000001 
00001000


-10补码 11110110
9 --  00001001
11110110
