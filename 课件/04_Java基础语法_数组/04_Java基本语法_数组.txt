1:数组的概念：
	数组是有序数据的集合，数组中的每个元素具有相同的数据类型。

	数组中的每一个元素都有一个唯一的下标号。
	

2:数据的使用场合：

	当程序出现多个相同数据类型的时候，就可以考虑使用数组来存放

	数据。

3：数组的分类

	一维数组

	多维数组

4：内存分配图

	A：寄存器区：放在此区的变量(只能是变量)，运行效率最快。
	    Java中无法直接操作此区。
	    C语言：register int a;

	B：栈区(Stack)：存放的是局部变量和形参变量。变量的生存周期

	   在方法运行时动态分配，在方法运行结束后销毁。

	C：堆区(Head)：堆区的内存需要程序员手工申请。存放在堆区的
	   变量不会自已销悔。
	   Java中，只要是new出来的对象都是放在堆区。

	D：常量区：存放是常量。值不能被改变

	E：静态区：存放的静态变量。只初始化一次的变量。在
	           Java中使用static修饰的变量，都是存放在该区。

	F：代码区：存放语句代码。

	
4：一维数组的使用
	java中的一个数组是一个对象，所以在内存中是分配在堆区的。

5：数组的定义
	int intArray[];
	double dArray[];
	String strArray[];

	数组只做定义，没有分配内存。不可以访问数组中的元素。

	数组必须要做初始化的操作。

6：数组的初始化：
	
	A：定义时，直接初始化
		int intArray[] = {1,2,3,4};

		//错误的场明。intArray只是一个变量。
		//变量不能跟长度。
		int intArray[4] = {1,2,3,4};
	B：先定义，后初始化。

		int intArray[] = new int[2];
		intArray[0] = 123;
		intArray[1] = 456;

	C：
		int intArray[] = new int[]{1,2,3};

数组的注意点：
	A：数组在定义时，必须固定长度。

	B：数组在分配内存时，没有赋值的话，有默认值。

	
	C：Java中的数组，可以获取长度。长度是数组的一个属性。

	D：Java中的数组在越界检查。



实例：
定义一数组，元素的值是随机的(小于100之内，不能是0).

求数组中最大元素的值以及所在的下标。

		