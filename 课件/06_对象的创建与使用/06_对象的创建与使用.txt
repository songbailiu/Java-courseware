1：类加载与创建对象过程

类加载:虚拟机装载类只会装载一次：

加载类--->加载类的静态方法和静态变量(只初始化一次)

--->加载类的静态块代码(只初始化一次)---->寻找main方法

对象创建：

初始化实例变量--->分配实例方法函数入口--->对象块代码--->对象的构造方法

--->调用对象的方法或者实例变量--->执行对象的销毁方法。


2：类变量与实例变量的区别

一、初始化的时间:类变量是在类加载的时候初始化，实例变量是对象创建的时候初始化

二、消亡的时间:类变量在应用程序退出的时候销毁，实例变量在对象不存在则销毁

三、是否共享:被该类的所有对象共享，实例变量是单个对象独有

四、声明形式:类变量static声明，实例变量没有static声明

五、调用形式:类变量可以直接使用类名.类变量名,实例变量只能通过对象.实例变量名调用

	

3：类方法与成员方法(实例方法，对象方法)
	
	类方法：通过类名调用，在类方法中不能使用this关键字。

	        因为this代表当前代表。

	成员方法：通过对象调用(对象必须new出来)。


4：
  构造方法:创建对象
  销毁方法(finalize)
	
	销毁方法是在对象被销毁的时候进行调用的。

	当一个对象在堆区没有一个明确的引用指向它的时候，Java虚
	拟机认为该对象是无用的。


  垃圾回收器是用于回收堆区分配的对象。垃圾回收器是虚拟机自动调用的。(堆区内存不够的情况下调用)

  但是可以通过System.gc()来强制运行垃圾回收器。

5：参数传递的值传递与引用传递

	A：值传递：基本数据类型传递都是值传递

	B：引用传递(地址传递)：复合数据类型都是引用传递。


